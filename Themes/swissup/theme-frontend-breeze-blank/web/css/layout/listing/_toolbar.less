& when (@critical) {
    .toolbar {
        display: flex;
        flex-wrap: wrap;
        align-items: center;
        gap: @3;
        margin: 0 0 @5;

        div + & {
            margin-top: @5;
        }

        > .pager {
            display: contents;
        }

        label,
        .limiter-text {
            white-space: nowrap;
        }
        select {
            max-width: 130px;
            @media @media-md {
                max-width: 170px;
            }
        }

        label,
        .toolbar-amount,
        .limiter-text {
            .lib-css(color, @toolbar__color);
        }


        .sorter,
        .limiter {
            display: flex;
            align-items: center;
            justify-content: flex-end;
            gap: @2;
            .margin-left(auto);
        }
        .sorter-action {
            --muted-alpha: .4;
            color: @muted__color;
            span {
                &:extend(.sr-only);
            }
            &::before {
                content: '';
                display: block;
                width: @6;
                height: @6;
            }
        }
        .modes {
            display: flex;
            align-items: center;
            .lib-css(border, @toolbar-modes__border);
            .lib-css(border-radius, @toolbar-modes__border-radius);
            a {
                --muted-alpha: .3;
                color: @muted__color;
            }
        }
        .modes-label {
            &:extend(.sr-only);
        }
        .mode-grid {
            & when not (@toolbar-modes__border = false) {
                .border-right(@toolbar-modes__border);
            }
        }
        .mode-grid,
        .mode-list {
            padding: @2;
            span {
                &:extend(.sr-only);
            }
            &::before {
                content: '';
                display: block;
                width: @6;
                height: @6;
            }
        }

        @media @media-sm-down {
            .modes ~ .toolbar-amount {
                order: 100;
                width: 100%;
            }
        }

        .pages {
            display: flex;
            align-items: center;
            .label {
                &:extend(.sr-only);
            }
            .items {
                display: flex;
                flex-wrap: wrap;
                align-items: center;
                gap: @2;

                a,
                .page {
                    display: flex;
                    padding: @1 @2;
                }

                .current .page {
                    background: @muted__background;
                }
            }
            .previous,
            .next {
                display: flex;
                align-items: center;
                --muted-alpha: .4;
                color: @muted__color;
                span {
                    &:extend(.sr-only);
                }
                &::before {
                    content: '';
                    display: block;
                    width: @6;
                    height: @6;
                }
            }
        }

        .toolbar-amount + .pages {
            .margin-left(auto);
        }
    }
}

& when not (@critical) {
    .toolbar {
        .pages .previous::before,
        .pages .next::before,
        .sorter-action::before {
            .breeze-icon(@icon-arrow-up);
        }
        .sort-desc::before {
            transform: rotate(180deg);
        }
        .sorter-action {
            &:extend(.transition);
            &:hover {
                --muted-alpha: .6;
            }
        }
        .modes {
            a {
                &:extend(.transition);
                &:hover {
                    --muted-alpha: .6;
                }
            }
        }
        .mode-grid::before {
            .breeze-icon(@icon-view-grid);
        }
        .mode-list::before {
            .breeze-icon(@icon-view-list);
        }
        .pages {
            a.page {
                &:extend(.transition);
                &:hover {
                    background: @muted__background;
                }
            }
            .next::before {
                .modrtl(transform, rotate(90deg), rotate(-90deg));
            }
            .previous::before {
                .modrtl(transform, rotate(-90deg), rotate(90deg));
            }
            .next,
            .previous {
                &:extend(.transition);
                &:hover {
                    --muted-alpha: .6;
                }
            }
        }
    }
}
